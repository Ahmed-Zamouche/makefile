PREFIX = @prefix@
DBG = @dbg@

BUILD_DIR ?= build
DESTDIR ?= $(HOME)/opt

SRC_DIR ?= src
LIB_DIR := $(BUILD_DIR)/lib
OBJ_DIR := $(BUILD_DIR)/obj
DEP_DIR := $(BUILD_DIR)/dep


#SRC := $(wildcard $(SRC_DIR)/*.c)
SRC :=$(shell find $(SRC_DIR) -name "*.c")
HDR :=$(shell find $(SRC_DIR) -name "*.h")
OBJ := $(addprefix $(OBJ_DIR)/, $(SRC:$(SRC_DIR)/%.c=%.o))
DEP := $(addprefix $(DEP_DIR)/, $(SRC:$(SRC_DIR)/%.c=%.d))

TARGET := foo

INC := -I$(SRC_DIR) \
-I$(DESTDIR)$(PREFIX)/include \
-I$(SRC_DIR)/export_inc \

CFLAGS := -Wall -std=c99 -O2 $(DBG) -Werror $(INC)

LDFLAGS := -lm

.PHONY: all
all: $(TARGET)

$(TARGET): $(OBJ)
	@mkdir -p $(LIB_DIR)
	@mkdir -p $(BUILD_DIR)/include
	$(AR) rcs  $(LIB_DIR)/lib$@.a $^
	cp -r $(SRC_DIR)/export_inc/* $(BUILD_DIR)/include

$(OBJ_DIR)/%.o: $(DEP_DIR)/%.d
	@mkdir -p  $(dir $@)
	$(CC) $(CFLAGS) -o $@ -c $(@:$(OBJ_DIR)/%.o=$(SRC_DIR)/%.c)

-include $(DEP)   # include all dep files in the makefile

# rule to generate a dep file by using the C preprocessor
$(DEP_DIR)/%.d: $(SRC_DIR)/%.c
	@mkdir -p  $(dir $@)
	$(CC) $(CFLAGS) $< -MM -MT $(@:$(DEP_DIR)/%.d=$(OBJ_DIR)/%.o) > $@

.PHONY: clang-format
clang-format:
	clang-format -i $(SRC) $(HDR)

.PHONY: cleanobj
cleanobj:
	rm -f $(OBJ)

.PHONY: cleandep
cleandep:
	rm -f $(DEP)

.PHONY: clean
clean: cleanobj cleandep

.PHONY: install
install: $(TARGET)
	mkdir -p $(DESTDIR)$(PREFIX)/lib
	mkdir -p $(DESTDIR)$(PREFIX)/lib/pkgconfig
	mkdir -p $(DESTDIR)$(PREFIX)/include/$(TARGET)
	cp $(LIB_DIR)/lib$(TARGET).a $(DESTDIR)$(PREFIX)/lib/lib$(TARGET).a
	sed 's|@DESTDIR@|$(DESTDIR)|' lib$(TARGET).pc > $(DESTDIR)$(PREFIX)/lib/pkgconfig/lib$(TARGET).pc
	cp -r $(BUILD_DIR)/include/*  $(DESTDIR)$(PREFIX)/include/$(TARGET)

.PHONY: uninstall
uninstall:
	rm -f $(DESTDIR)$(PREFIX)/lib/lib$(TARGET).a
	rm -f $(DESTDIR)$(PREFIX)/lib/pkgconfig/lib$(TARGET).pc
	rm -rf $(DESTDIR)$(PREFIX)/include/$(TARGET)
